State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement statements
    3           | %empty

    4 statement: expr SEMICOLON
    5          | ifstmt
    6          | whilestmt
    7          | forstmt
    8          | returnstmt
    9          | BREAK SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | block
   12          | funcdef
   13          | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTI expr
   18     | expr DIV expr
   19     | expr MOD expr
   20     | expr GREAT expr
   21     | expr GREATEQUAL expr
   22     | expr LESS expr
   23     | expr LESSEQUAL expr
   24     | expr EQUAL expr
   25     | expr NOTEQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LPAR expr RPAR
   30     | MINUS expr
   31     | NOT expr
   32     | INCR lvalue

   33 $@1: %empty

   34 term: lvalue $@1 INCR
   35     | DECR lvalue

   36 $@2: %empty

   37 term: lvalue $@2 DECR
   38     | primary

   39 $@3: %empty

   40 assignexpr: lvalue $@3 ASSIGN expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LPAR funcdef RPAR
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | DCOLON ID
   49       | member

   50 tableitem: lvalue DOT ID
   51          | lvalue LBRACKET expr RBRACKET

   52 member: tableitem
   53       | call DOT ID
   54       | call LBRACKET expr RBRACKET

   55 call: call LPAR elist RPAR
   56     | lvalue callsuffix
   57     | LPAR funcdef RPAR LPAR elist RPAR

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LPAR elist RPAR

   61 methodcall: DDOT ID LPAR elist RPAR

   62 elist: expr listexpr
   63      | %empty

   64 listexpr: COMMA expr listexpr
   65         | %empty

   66 objectdef: LBRACKET elist RBRACKET
   67          | LBRACKET indexed RBRACKET

   68 indexed: indexedelem indexedelemlist

   69 indexedelemlist: COMMA indexedelem indexedelemlist
   70                | %empty

   71 indexedelem: LANGLE expr COLON expr RANGLE

   72 $@4: %empty

   73 block: LANGLE $@4 RANGLE

   74 $@5: %empty

   75 block: LANGLE $@5 statement statements RANGLE

   76 funcname: ID
   77         | %empty

   78 funcprefix: FUNCTION funcname

   79 $@6: %empty

   80 funcargs: LPAR $@6 idlist RPAR

   81 funcstart: %empty

   82 funcend: %empty

   83 funcbody: funcstart block funcend

   84 funcdef: funcprefix funcargs funcbody

   85 const: INT
   86      | REAL
   87      | YYSTRING
   88      | NIL
   89      | TRUE
   90      | FALSE

   91 $@7: %empty

   92 idlist: ID $@7 idlistlist
   93       | %empty

   94 $@8: %empty

   95 idlistlist: COMMA ID $@8 idlistlist
   96           | %empty

   97 ifprefix: IF LPAR expr RPAR

   98 elseprefix: ELSE

   99 ifstmt: ifprefix statement
  100       | ifprefix statement elseprefix statement

  101 whilestart: WHILE

  102 whilecond: LPAR expr RPAR

  103 whilestmt: whilestart whilecond statement

  104 N: %empty

  105 M: %empty

  106 $@9: %empty

  107 forprefix: FOR $@9 LPAR elist SEMICOLON M expr SEMICOLON

  108 forstmt: forprefix N elist RPAR N statement N

  109 returnstmt: RETURN SEMICOLON
  110           | RETURN expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 97
ELSE (259) 98
WHILE (260) 101
FOR (261) 107
FUNCTION (262) 78
RETURN (263) 109 110
BREAK (264) 9
CONTINUE (265) 10
AND (266) 26
NOT (267) 31
OR (268) 27
LOCAL (269) 47
TRUE (270) 89
FALSE (271) 90
NIL (272) 88
ASSIGN (273) 40
PLUS (274) 15
MINUS (275) 16 30
MULTI (276) 17
DIV (277) 18
MOD (278) 19
EQUAL (279) 24
NOTEQUAL (280) 25
INCR (281) 32 34
DECR (282) 35 37
LESS (283) 22
GREAT (284) 20
GREATEQUAL (285) 21
LESSEQUAL (286) 23
LPAR (287) 29 44 55 57 60 61 80 97 102 107
RPAR (288) 29 44 55 57 60 61 80 97 102 108
LBRACKET (289) 51 54 66 67
RBRACKET (290) 51 54 66 67
LANGLE (291) 71 73 75
RANGLE (292) 71 73 75
SEMICOLON (293) 4 9 10 13 107 109 110
COMMA (294) 64 69 95
COLON (295) 71
DCOLON (296) 48
DOT (297) 50 53
DDOT (298) 61
ID (299) 46 47 48 50 53 61 76 92 95
INT (300) 85
REAL (301) 86
YYSTRING (302) 87
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3, on right: 1 2 75
statement (52)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 75 99 100 103 108
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 40 51 54 62 64
    71 97 102 107 110
term (54)
    on left: 29 30 31 32 34 35 37 38, on right: 28
$@1 (55)
    on left: 33, on right: 34
$@2 (56)
    on left: 36, on right: 37
assignexpr (57)
    on left: 40, on right: 14
$@3 (58)
    on left: 39, on right: 40
primary (59)
    on left: 41 42 43 44 45, on right: 38
lvalue (60)
    on left: 46 47 48 49, on right: 32 34 35 37 40 41 50 51 56
tableitem (61)
    on left: 50 51, on right: 52
member (62)
    on left: 52 53 54, on right: 49
call (63)
    on left: 55 56 57, on right: 42 53 54 55
callsuffix (64)
    on left: 58 59, on right: 56
normcall (65)
    on left: 60, on right: 58
methodcall (66)
    on left: 61, on right: 59
elist (67)
    on left: 62 63, on right: 55 57 60 61 66 107 108
listexpr (68)
    on left: 64 65, on right: 62 64
objectdef (69)
    on left: 66 67, on right: 43
indexed (70)
    on left: 68, on right: 67
indexedelemlist (71)
    on left: 69 70, on right: 68 69
indexedelem (72)
    on left: 71, on right: 68 69
block (73)
    on left: 73 75, on right: 11 83
$@4 (74)
    on left: 72, on right: 73
$@5 (75)
    on left: 74, on right: 75
funcname (76)
    on left: 76 77, on right: 78
funcprefix (77)
    on left: 78, on right: 84
funcargs (78)
    on left: 80, on right: 84
$@6 (79)
    on left: 79, on right: 80
funcstart (80)
    on left: 81, on right: 83
funcend (81)
    on left: 82, on right: 83
funcbody (82)
    on left: 83, on right: 84
funcdef (83)
    on left: 84, on right: 12 44 57
const (84)
    on left: 85 86 87 88 89 90, on right: 45
idlist (85)
    on left: 92 93, on right: 80
$@7 (86)
    on left: 91, on right: 92
idlistlist (87)
    on left: 95 96, on right: 92 95
$@8 (88)
    on left: 94, on right: 95
ifprefix (89)
    on left: 97, on right: 99 100
elseprefix (90)
    on left: 98, on right: 100
ifstmt (91)
    on left: 99 100, on right: 5
whilestart (92)
    on left: 101, on right: 103
whilecond (93)
    on left: 102, on right: 103
whilestmt (94)
    on left: 103, on right: 6
N (95)
    on left: 104, on right: 108
M (96)
    on left: 105, on right: 107
forprefix (97)
    on left: 107, on right: 108
$@9 (98)
    on left: 106, on right: 107
forstmt (99)
    on left: 108, on right: 7
returnstmt (100)
    on left: 109 110, on right: 8


State 0

    0 $accept: . program $end

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    $default  reduce using rule 3 (statements)

    program     go to state 25
    statements  go to state 26
    statement   go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 1

   97 ifprefix: IF . LPAR expr RPAR

    LPAR  shift, and go to state 48


State 2

  101 whilestart: WHILE .

    $default  reduce using rule 101 (whilestart)


State 3

  107 forprefix: FOR . $@9 LPAR elist SEMICOLON M expr SEMICOLON

    $default  reduce using rule 106 ($@9)

    $@9  go to state 49


State 4

   78 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 50

    $default  reduce using rule 77 (funcname)

    funcname  go to state 51


State 5

  109 returnstmt: RETURN . SEMICOLON
  110           | RETURN . expr SEMICOLON

    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    SEMICOLON  shift, and go to state 52
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 6

    9 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 7

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 8

   31 term: NOT . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 9

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 57


State 10

   89 const: TRUE .

    $default  reduce using rule 89 (const)


State 11

   90 const: FALSE .

    $default  reduce using rule 90 (const)


State 12

   88 const: NIL .

    $default  reduce using rule 88 (const)


State 13

   30 term: MINUS . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 14

   32 term: INCR . lvalue

    LOCAL   shift, and go to state 9
    LPAR    shift, and go to state 59
    DCOLON  shift, and go to state 20
    ID      shift, and go to state 21

    lvalue     go to state 60
    tableitem  go to state 33
    member     go to state 34
    call       go to state 61


State 15

   35 term: DECR . lvalue

    LOCAL   shift, and go to state 9
    LPAR    shift, and go to state 59
    DCOLON  shift, and go to state 20
    ID      shift, and go to state 21

    lvalue     go to state 62
    tableitem  go to state 33
    member     go to state 34
    call       go to state 61


State 16

   29 term: LPAR . expr RPAR
   44 primary: LPAR . funcdef RPAR
   57 call: LPAR . funcdef RPAR LPAR elist RPAR

    FUNCTION  shift, and go to state 4
    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 64
    const       go to state 40


State 17

   66 objectdef: LBRACKET . elist RBRACKET
   67          | LBRACKET . indexed RBRACKET

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    LANGLE    shift, and go to state 65
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr         go to state 66
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    tableitem    go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 67
    objectdef    go to state 36
    indexed      go to state 68
    indexedelem  go to state 69
    const        go to state 40


State 18

   73 block: LANGLE . $@4 RANGLE
   75      | LANGLE . $@5 statement statements RANGLE

    RANGLE    reduce using rule 72 ($@4)
    $default  reduce using rule 74 ($@5)

    $@4  go to state 70
    $@5  go to state 71


State 19

   13 statement: SEMICOLON .

    $default  reduce using rule 13 (statement)


State 20

   48 lvalue: DCOLON . ID

    ID  shift, and go to state 72


State 21

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 22

   85 const: INT .

    $default  reduce using rule 85 (const)


State 23

   86 const: REAL .

    $default  reduce using rule 86 (const)


State 24

   87 const: YYSTRING .

    $default  reduce using rule 87 (const)


State 25

    0 $accept: program . $end

    $end  shift, and go to state 73


State 26

    1 program: statements .

    $default  reduce using rule 1 (program)


State 27

    2 statements: statement . statements

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 74
    statement   go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 28

    4 statement: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    SEMICOLON   shift, and go to state 88


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   38 term: primary .

    $default  reduce using rule 38 (term)


State 32

   34 term: lvalue . $@1 INCR
   37     | lvalue . $@2 DECR
   40 assignexpr: lvalue . $@3 ASSIGN expr
   41 primary: lvalue .
   50 tableitem: lvalue . DOT ID
   51          | lvalue . LBRACKET expr RBRACKET
   56 call: lvalue . callsuffix

    LPAR      shift, and go to state 89
    LBRACKET  shift, and go to state 90
    DOT       shift, and go to state 91
    DDOT      shift, and go to state 92

    ASSIGN    reduce using rule 39 ($@3)
    INCR      reduce using rule 33 ($@1)
    DECR      reduce using rule 36 ($@2)
    $default  reduce using rule 41 (primary)

    $@1         go to state 93
    $@2         go to state 94
    $@3         go to state 95
    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 33

   52 member: tableitem .

    $default  reduce using rule 52 (member)


State 34

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 35

   42 primary: call .
   53 member: call . DOT ID
   54       | call . LBRACKET expr RBRACKET
   55 call: call . LPAR elist RPAR

    LPAR      shift, and go to state 99
    LBRACKET  shift, and go to state 100
    DOT       shift, and go to state 101

    $default  reduce using rule 42 (primary)


State 36

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 37

   11 statement: block .

    $default  reduce using rule 11 (statement)


State 38

   84 funcdef: funcprefix . funcargs funcbody

    LPAR  shift, and go to state 102

    funcargs  go to state 103


State 39

   12 statement: funcdef .

    $default  reduce using rule 12 (statement)


State 40

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 41

   99 ifstmt: ifprefix . statement
  100       | ifprefix . statement elseprefix statement

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    statement   go to state 104
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 42

    5 statement: ifstmt .

    $default  reduce using rule 5 (statement)


State 43

  103 whilestmt: whilestart . whilecond statement

    LPAR  shift, and go to state 105

    whilecond  go to state 106


State 44

    6 statement: whilestmt .

    $default  reduce using rule 6 (statement)


State 45

  108 forstmt: forprefix . N elist RPAR N statement N

    $default  reduce using rule 104 (N)

    N  go to state 107


State 46

    7 statement: forstmt .

    $default  reduce using rule 7 (statement)


State 47

    8 statement: returnstmt .

    $default  reduce using rule 8 (statement)


State 48

   97 ifprefix: IF LPAR . expr RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 108
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 49

  107 forprefix: FOR $@9 . LPAR elist SEMICOLON M expr SEMICOLON

    LPAR  shift, and go to state 109


State 50

   76 funcname: ID .

    $default  reduce using rule 76 (funcname)


State 51

   78 funcprefix: FUNCTION funcname .

    $default  reduce using rule 78 (funcprefix)


State 52

  109 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 109 (returnstmt)


State 53

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  110 returnstmt: RETURN expr . SEMICOLON

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    SEMICOLON   shift, and go to state 110


State 54

    9 statement: BREAK SEMICOLON .

    $default  reduce using rule 9 (statement)


State 55

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


State 56

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 57

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


State 58

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 59

   57 call: LPAR . funcdef RPAR LPAR elist RPAR

    FUNCTION  shift, and go to state 4

    funcprefix  go to state 38
    funcdef     go to state 111


State 60

   32 term: INCR lvalue .
   50 tableitem: lvalue . DOT ID
   51          | lvalue . LBRACKET expr RBRACKET
   56 call: lvalue . callsuffix

    LPAR      shift, and go to state 89
    LBRACKET  shift, and go to state 90
    DOT       shift, and go to state 91
    DDOT      shift, and go to state 92

    $default  reduce using rule 32 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 61

   53 member: call . DOT ID
   54       | call . LBRACKET expr RBRACKET
   55 call: call . LPAR elist RPAR

    LPAR      shift, and go to state 99
    LBRACKET  shift, and go to state 100
    DOT       shift, and go to state 101


State 62

   35 term: DECR lvalue .
   50 tableitem: lvalue . DOT ID
   51          | lvalue . LBRACKET expr RBRACKET
   56 call: lvalue . callsuffix

    LPAR      shift, and go to state 89
    LBRACKET  shift, and go to state 90
    DOT       shift, and go to state 91
    DDOT      shift, and go to state 92

    $default  reduce using rule 35 (term)

    callsuffix  go to state 96
    normcall    go to state 97
    methodcall  go to state 98


State 63

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LPAR expr . RPAR

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RPAR        shift, and go to state 112


State 64

   44 primary: LPAR funcdef . RPAR
   57 call: LPAR funcdef . RPAR LPAR elist RPAR

    RPAR  shift, and go to state 113


State 65

   71 indexedelem: LANGLE . expr COLON expr RANGLE

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 66

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   62 elist: expr . listexpr

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    COMMA       shift, and go to state 115

    $default  reduce using rule 65 (listexpr)

    listexpr  go to state 116


State 67

   66 objectdef: LBRACKET elist . RBRACKET

    RBRACKET  shift, and go to state 117


State 68

   67 objectdef: LBRACKET indexed . RBRACKET

    RBRACKET  shift, and go to state 118


State 69

   68 indexed: indexedelem . indexedelemlist

    COMMA  shift, and go to state 119

    $default  reduce using rule 70 (indexedelemlist)

    indexedelemlist  go to state 120


State 70

   73 block: LANGLE $@4 . RANGLE

    RANGLE  shift, and go to state 121


State 71

   75 block: LANGLE $@5 . statement statements RANGLE

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    statement   go to state 122
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 72

   48 lvalue: DCOLON ID .

    $default  reduce using rule 48 (lvalue)


State 73

    0 $accept: program $end .

    $default  accept


State 74

    2 statements: statement statements .

    $default  reduce using rule 2 (statements)


State 75

   26 expr: expr AND . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 76

   27 expr: expr OR . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 77

   15 expr: expr PLUS . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 78

   16 expr: expr MINUS . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 79

   17 expr: expr MULTI . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 80

   18 expr: expr DIV . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 81

   19 expr: expr MOD . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 82

   24 expr: expr EQUAL . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 83

   25 expr: expr NOTEQUAL . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 84

   22 expr: expr LESS . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 85

   20 expr: expr GREAT . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 86

   21 expr: expr GREATEQUAL . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 87

   23 expr: expr LESSEQUAL . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 88

    4 statement: expr SEMICOLON .

    $default  reduce using rule 4 (statement)


State 89

   60 normcall: LPAR . elist RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    objectdef   go to state 36
    const       go to state 40


State 90

   51 tableitem: lvalue LBRACKET . expr RBRACKET

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 137
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 91

   50 tableitem: lvalue DOT . ID

    ID  shift, and go to state 138


State 92

   61 methodcall: DDOT . ID LPAR elist RPAR

    ID  shift, and go to state 139


State 93

   34 term: lvalue $@1 . INCR

    INCR  shift, and go to state 140


State 94

   37 term: lvalue $@2 . DECR

    DECR  shift, and go to state 141


State 95

   40 assignexpr: lvalue $@3 . ASSIGN expr

    ASSIGN  shift, and go to state 142


State 96

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 97

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 98

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 99

   55 call: call LPAR . elist RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 143
    objectdef   go to state 36
    const       go to state 40


State 100

   54 member: call LBRACKET . expr RBRACKET

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 144
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 101

   53 member: call DOT . ID

    ID  shift, and go to state 145


State 102

   80 funcargs: LPAR . $@6 idlist RPAR

    $default  reduce using rule 79 ($@6)

    $@6  go to state 146


State 103

   84 funcdef: funcprefix funcargs . funcbody

    $default  reduce using rule 81 (funcstart)

    funcstart  go to state 147
    funcbody   go to state 148


State 104

   99 ifstmt: ifprefix statement .
  100       | ifprefix statement . elseprefix statement

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 99 (ifstmt)]
    $default  reduce using rule 99 (ifstmt)

    elseprefix  go to state 150


State 105

  102 whilecond: LPAR . expr RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 151
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 106

  103 whilestmt: whilestart whilecond . statement

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    statement   go to state 152
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 107

  108 forstmt: forprefix N . elist RPAR N statement N

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 153
    objectdef   go to state 36
    const       go to state 40


State 108

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   97 ifprefix: IF LPAR expr . RPAR

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RPAR        shift, and go to state 154


State 109

  107 forprefix: FOR $@9 LPAR . elist SEMICOLON M expr SEMICOLON

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 155
    objectdef   go to state 36
    const       go to state 40


State 110

  110 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 110 (returnstmt)


State 111

   57 call: LPAR funcdef . RPAR LPAR elist RPAR

    RPAR  shift, and go to state 156


State 112

   29 term: LPAR expr RPAR .

    $default  reduce using rule 29 (term)


State 113

   44 primary: LPAR funcdef RPAR .
   57 call: LPAR funcdef RPAR . LPAR elist RPAR

    LPAR  shift, and go to state 157

    $default  reduce using rule 44 (primary)


State 114

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   71 indexedelem: LANGLE expr . COLON expr RANGLE

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    COLON       shift, and go to state 158


State 115

   64 listexpr: COMMA . expr listexpr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 159
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 116

   62 elist: expr listexpr .

    $default  reduce using rule 62 (elist)


State 117

   66 objectdef: LBRACKET elist RBRACKET .

    $default  reduce using rule 66 (objectdef)


State 118

   67 objectdef: LBRACKET indexed RBRACKET .

    $default  reduce using rule 67 (objectdef)


State 119

   69 indexedelemlist: COMMA . indexedelem indexedelemlist

    LANGLE  shift, and go to state 65

    indexedelem  go to state 160


State 120

   68 indexed: indexedelem indexedelemlist .

    $default  reduce using rule 68 (indexed)


State 121

   73 block: LANGLE $@4 RANGLE .

    $default  reduce using rule 73 (block)


State 122

   75 block: LANGLE $@5 statement . statements RANGLE

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 161
    statement   go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87

    $default  reduce using rule 26 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND         shift, and go to state 75
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87

    $default  reduce using rule 27 (expr)


State 125

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 15 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 16 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   17     | expr MULTI expr .
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 131

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   25     | expr NOTEQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 132

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   22     | expr LESS expr .
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    LESS        error (nonassociative)
    GREAT       error (nonassociative)
    GREATEQUAL  error (nonassociative)
    LESSEQUAL   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 133

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   20     | expr GREAT expr .
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    LESS        error (nonassociative)
    GREAT       error (nonassociative)
    GREATEQUAL  error (nonassociative)
    LESSEQUAL   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 134

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   21     | expr GREATEQUAL expr .
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    LESS        error (nonassociative)
    GREAT       error (nonassociative)
    GREATEQUAL  error (nonassociative)
    LESSEQUAL   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 135

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   23     | expr LESSEQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    MULTI  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    LESS        error (nonassociative)
    GREAT       error (nonassociative)
    GREATEQUAL  error (nonassociative)
    LESSEQUAL   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 136

   60 normcall: LPAR elist . RPAR

    RPAR  shift, and go to state 162


State 137

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   51 tableitem: lvalue LBRACKET expr . RBRACKET

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RBRACKET    shift, and go to state 163


State 138

   50 tableitem: lvalue DOT ID .

    $default  reduce using rule 50 (tableitem)


State 139

   61 methodcall: DDOT ID . LPAR elist RPAR

    LPAR  shift, and go to state 164


State 140

   34 term: lvalue $@1 INCR .

    $default  reduce using rule 34 (term)


State 141

   37 term: lvalue $@2 DECR .

    $default  reduce using rule 37 (term)


State 142

   40 assignexpr: lvalue $@3 ASSIGN . expr

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 165
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 143

   55 call: call LPAR elist . RPAR

    RPAR  shift, and go to state 166


State 144

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   54 member: call LBRACKET expr . RBRACKET

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RBRACKET    shift, and go to state 167


State 145

   53 member: call DOT ID .

    $default  reduce using rule 53 (member)


State 146

   80 funcargs: LPAR $@6 . idlist RPAR

    ID  shift, and go to state 168

    $default  reduce using rule 93 (idlist)

    idlist  go to state 169


State 147

   83 funcbody: funcstart . block funcend

    LANGLE  shift, and go to state 18

    block  go to state 170


State 148

   84 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 84 (funcdef)


State 149

   98 elseprefix: ELSE .

    $default  reduce using rule 98 (elseprefix)


State 150

  100 ifstmt: ifprefix statement elseprefix . statement

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    statement   go to state 171
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 151

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  102 whilecond: LPAR expr . RPAR

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RPAR        shift, and go to state 172


State 152

  103 whilestmt: whilestart whilecond statement .

    $default  reduce using rule 103 (whilestmt)


State 153

  108 forstmt: forprefix N elist . RPAR N statement N

    RPAR  shift, and go to state 173


State 154

   97 ifprefix: IF LPAR expr RPAR .

    $default  reduce using rule 97 (ifprefix)


State 155

  107 forprefix: FOR $@9 LPAR elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 174


State 156

   57 call: LPAR funcdef RPAR . LPAR elist RPAR

    LPAR  shift, and go to state 157


State 157

   57 call: LPAR funcdef RPAR LPAR . elist RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 175
    objectdef   go to state 36
    const       go to state 40


State 158

   71 indexedelem: LANGLE expr COLON . expr RANGLE

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 176
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 159

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   64 listexpr: COMMA expr . listexpr

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    COMMA       shift, and go to state 115

    $default  reduce using rule 65 (listexpr)

    listexpr  go to state 177


State 160

   69 indexedelemlist: COMMA indexedelem . indexedelemlist

    COMMA  shift, and go to state 119

    $default  reduce using rule 70 (indexedelemlist)

    indexedelemlist  go to state 178


State 161

   75 block: LANGLE $@5 statement statements . RANGLE

    RANGLE  shift, and go to state 179


State 162

   60 normcall: LPAR elist RPAR .

    $default  reduce using rule 60 (normcall)


State 163

   51 tableitem: lvalue LBRACKET expr RBRACKET .

    $default  reduce using rule 51 (tableitem)


State 164

   61 methodcall: DDOT ID LPAR . elist RPAR

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 66
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 180
    objectdef   go to state 36
    const       go to state 40


State 165

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   40 assignexpr: lvalue $@3 ASSIGN expr .

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87

    $default  reduce using rule 40 (assignexpr)


State 166

   55 call: call LPAR elist RPAR .

    $default  reduce using rule 55 (call)


State 167

   54 member: call LBRACKET expr RBRACKET .

    $default  reduce using rule 54 (member)


State 168

   92 idlist: ID . $@7 idlistlist

    $default  reduce using rule 91 ($@7)

    $@7  go to state 181


State 169

   80 funcargs: LPAR $@6 idlist . RPAR

    RPAR  shift, and go to state 182


State 170

   83 funcbody: funcstart block . funcend

    $default  reduce using rule 82 (funcend)

    funcend  go to state 183


State 171

  100 ifstmt: ifprefix statement elseprefix statement .

    $default  reduce using rule 100 (ifstmt)


State 172

  102 whilecond: LPAR expr RPAR .

    $default  reduce using rule 102 (whilecond)


State 173

  108 forstmt: forprefix N elist RPAR . N statement N

    $default  reduce using rule 104 (N)

    N  go to state 184


State 174

  107 forprefix: FOR $@9 LPAR elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 105 (M)

    M  go to state 185


State 175

   57 call: LPAR funcdef RPAR LPAR elist . RPAR

    RPAR  shift, and go to state 186


State 176

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   71 indexedelem: LANGLE expr COLON expr . RANGLE

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    RANGLE      shift, and go to state 187


State 177

   64 listexpr: COMMA expr listexpr .

    $default  reduce using rule 64 (listexpr)


State 178

   69 indexedelemlist: COMMA indexedelem indexedelemlist .

    $default  reduce using rule 69 (indexedelemlist)


State 179

   75 block: LANGLE $@5 statement statements RANGLE .

    $default  reduce using rule 75 (block)


State 180

   61 methodcall: DDOT ID LPAR elist . RPAR

    RPAR  shift, and go to state 188


State 181

   92 idlist: ID $@7 . idlistlist

    COMMA  shift, and go to state 189

    $default  reduce using rule 96 (idlistlist)

    idlistlist  go to state 190


State 182

   80 funcargs: LPAR $@6 idlist RPAR .

    $default  reduce using rule 80 (funcargs)


State 183

   83 funcbody: funcstart block funcend .

    $default  reduce using rule 83 (funcbody)


State 184

  108 forstmt: forprefix N elist RPAR N . statement N

    IF         shift, and go to state 1
    WHILE      shift, and go to state 2
    FOR        shift, and go to state 3
    FUNCTION   shift, and go to state 4
    RETURN     shift, and go to state 5
    BREAK      shift, and go to state 6
    CONTINUE   shift, and go to state 7
    NOT        shift, and go to state 8
    LOCAL      shift, and go to state 9
    TRUE       shift, and go to state 10
    FALSE      shift, and go to state 11
    NIL        shift, and go to state 12
    MINUS      shift, and go to state 13
    INCR       shift, and go to state 14
    DECR       shift, and go to state 15
    LPAR       shift, and go to state 16
    LBRACKET   shift, and go to state 17
    LANGLE     shift, and go to state 18
    SEMICOLON  shift, and go to state 19
    DCOLON     shift, and go to state 20
    ID         shift, and go to state 21
    INT        shift, and go to state 22
    REAL       shift, and go to state 23
    YYSTRING   shift, and go to state 24

    statement   go to state 191
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 185

  107 forprefix: FOR $@9 LPAR elist SEMICOLON M . expr SEMICOLON

    NOT       shift, and go to state 8
    LOCAL     shift, and go to state 9
    TRUE      shift, and go to state 10
    FALSE     shift, and go to state 11
    NIL       shift, and go to state 12
    MINUS     shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    LPAR      shift, and go to state 16
    LBRACKET  shift, and go to state 17
    DCOLON    shift, and go to state 20
    ID        shift, and go to state 21
    INT       shift, and go to state 22
    REAL      shift, and go to state 23
    YYSTRING  shift, and go to state 24

    expr        go to state 192
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 186

   57 call: LPAR funcdef RPAR LPAR elist RPAR .

    $default  reduce using rule 57 (call)


State 187

   71 indexedelem: LANGLE expr COLON expr RANGLE .

    $default  reduce using rule 71 (indexedelem)


State 188

   61 methodcall: DDOT ID LPAR elist RPAR .

    $default  reduce using rule 61 (methodcall)


State 189

   95 idlistlist: COMMA . ID $@8 idlistlist

    ID  shift, and go to state 193


State 190

   92 idlist: ID $@7 idlistlist .

    $default  reduce using rule 92 (idlist)


State 191

  108 forstmt: forprefix N elist RPAR N statement . N

    $default  reduce using rule 104 (N)

    N  go to state 194


State 192

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . GREAT expr
   21     | expr . GREATEQUAL expr
   22     | expr . LESS expr
   23     | expr . LESSEQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOTEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
  107 forprefix: FOR $@9 LPAR elist SEMICOLON M expr . SEMICOLON

    AND         shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    MINUS       shift, and go to state 78
    MULTI       shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    EQUAL       shift, and go to state 82
    NOTEQUAL    shift, and go to state 83
    LESS        shift, and go to state 84
    GREAT       shift, and go to state 85
    GREATEQUAL  shift, and go to state 86
    LESSEQUAL   shift, and go to state 87
    SEMICOLON   shift, and go to state 195


State 193

   95 idlistlist: COMMA ID . $@8 idlistlist

    $default  reduce using rule 94 ($@8)

    $@8  go to state 196


State 194

  108 forstmt: forprefix N elist RPAR N statement N .

    $default  reduce using rule 108 (forstmt)


State 195

  107 forprefix: FOR $@9 LPAR elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 107 (forprefix)


State 196

   95 idlistlist: COMMA ID $@8 . idlistlist

    COMMA  shift, and go to state 189

    $default  reduce using rule 96 (idlistlist)

    idlistlist  go to state 197


State 197

   95 idlistlist: COMMA ID $@8 idlistlist .

    $default  reduce using rule 95 (idlistlist)
